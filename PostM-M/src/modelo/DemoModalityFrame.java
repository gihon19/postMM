package modelo;

import java.awt.Color;
import javax.swing.JComponent;
import javax.swing.JDesktopPane;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JButton;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.GroupLayout;
import javax.swing.SwingConstants;
import java.awt.Component;

/*
 * A demo frame just to highlight the functionality provided in the modality
 * demo.
 *
 * @author webbit
 *
 */
public class DemoModalityFrame extends ModalityInternalFrame {

    public DemoModalityFrame() {
        initComponents();
    }

    private void setColor() {
        if (parent != null && parent instanceof DemoModalityFrame) {
            iconLabel.setOpaque(true);
            iconLabel.setBackground(((DemoModalityFrame) parent).getIconLabel().getBackground());
        } else {
            int r = (int) (Math.random() * 255);
            int g = (int) (Math.random() * 255);
            int b = (int) (Math.random() * 255);
            iconLabel.setOpaque(true);
            iconLabel.setBackground(new Color(r, g, b));
        }
    }

    protected JLabel getIconLabel() {
        return iconLabel;
    }

    public DemoModalityFrame(JComponent parentFrame) {
        this(parentFrame, null);
    }

    public DemoModalityFrame(JComponent parentFrame, String title) {
        this(parentFrame, title, false);
    }

    public DemoModalityFrame(JComponent parentFrame, String title, boolean resizable) {
        this(parentFrame, title, resizable, false);
    }

    public DemoModalityFrame(JComponent parentFrame, String title, boolean resizable, boolean closeable) {
        this(parentFrame, title, resizable, closeable, false);
    }

    public DemoModalityFrame(JComponent parentFrame, String title, boolean resizable, boolean closeable,
                             boolean maximizable) {
        this(parentFrame, title, resizable, closeable, maximizable, false);
    }

    public DemoModalityFrame(JComponent parentFrame, String title, boolean resizable, boolean closeable,
                             boolean maximizable, boolean iconifiable) {
        super(parentFrame, title, resizable, closeable, maximizable, iconifiable);
        setColor();
    }

    protected void init() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        childModalFrameBtn = new javax.swing.JButton();
        iconLabel = new javax.swing.JLabel();
        desktopModalDialogBtn = new javax.swing.JButton();
        childModalDialogBtn = new javax.swing.JButton();

        childModalFrameBtn.setText("Create Child Modal Frame");
        childModalFrameBtn.setActionCommand("Create Modal Frame");
        childModalFrameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                childModalFrameBtnActionPerformed(evt);
            }
        });

        iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("scream.jpg"))); // NOI18N

        desktopModalDialogBtn.setText("Create Desktop Modal Dialog");
        desktopModalDialogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desktopModalDialogBtnActionPerformed(evt);
            }
        });

        childModalDialogBtn.setText("Create Child Modal Dialog");
        childModalDialogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                childModalDialogBtnActionPerformed(evt);
            }
        });
        
        JButton btnNewButton = new JButton("New button");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(iconLabel)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(childModalFrameBtn, Alignment.LEADING)
        				.addComponent(childModalDialogBtn, Alignment.LEADING)
        				.addComponent(desktopModalDialogBtn, Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(6)
        					.addComponent(btnNewButton, GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)))
        			.addContainerGap())
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(iconLabel, GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
        					.addContainerGap())
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(childModalFrameBtn)
        					.addPreferredGap(ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
        					.addComponent(childModalDialogBtn)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(desktopModalDialogBtn)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btnNewButton)
        					.addGap(65))))
        );
        layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {childModalFrameBtn, desktopModalDialogBtn, childModalDialogBtn});
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void childModalFrameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_childModalFrameBtnActionPerformed
        ModalityInternalFrame newFrame = new DemoModalityFrame(this, "child", true, true, true, true);
        JDesktopPane desktop = JOptionPane.getDesktopPaneForComponent(this);
//        int xRand = (int) (Math.random() * 100);
//        int yRand = (int) (Math.random() * 100);
//        newFrame.setBounds(30, 30, 350 + xRand, 200 + yRand);

        desktop.add(newFrame);
        newFrame.show();
    }//GEN-LAST:event_childModalFrameBtnActionPerformed

    private void desktopModalDialogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desktopModalDialogBtnActionPerformed
        JOptionPane.showInternalMessageDialog(this, "The desktop is now locked!", "Modal Message",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_desktopModalDialogBtnActionPerformed

    private void childModalDialogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_childModalDialogBtnActionPerformed
        JOptionPane pane = new JOptionPane("I've errored", JOptionPane.ERROR_MESSAGE, JOptionPane.OK_OPTION);
        ModalityInternalOptionFrame optionFrame = new ModalityInternalOptionFrame(this, pane, "Error dialog");
        JDesktopPane desktop = JOptionPane.getDesktopPaneForComponent(this);
        desktop.add(optionFrame);
        optionFrame.show();
    }//GEN-LAST:event_childModalDialogBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton childModalDialogBtn;
    private javax.swing.JButton childModalFrameBtn;
    private javax.swing.JButton desktopModalDialogBtn;
    private javax.swing.JLabel iconLabel;
}
